安装gcc8


暗转automake

https://www.cnblogs.com/clwsec/p/12493653.html


yum install centos-release-scl-rh

yum install devtoolset-8-build

yum install devtoolset-8-gdb


yum install devtoolset-8-gcc devtoolset-8-gcc-c++

source /opt/rh/devtoolset-8/enable

######## emcc
git clone https://github.com/emscripten-core/emsdk

version `GLIBC_2.18' not found
https://blog.csdn.net/qq_39295044/article/details/86685789

###### mac
HomeBrew LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to xxx解决方法
https://blog.csdn.net/weixin_44259371/article/details/108196760

networksetup -listallnetworkservices
networksetup -setv6off Wi-Fi


#######kaldi：

yum install sox subversion

em++: warning: ignoring unsupported linker flag: `-rpath` [-Wlinkflags]

HomeBrew LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to xxx解决方法



##########
emmake make -j clean depend


em++: error: Passing any of -msse, -msse2, -msse3, -mssse3, -msse4.1, -msse4.2, -mavx, -mfpu=neon flags also requires passing -msimd128!
em++: error: Passing any of -msse, -msse2, -msse3, -mssse3, -msse4.1, -msse4.2, -mavx, -mfpu=neon flags also requires passing -msimd128!
make[1]: *** [depend] 错误 1

sed -i  "s/\-Wno-sign-compare/\-msse \-msse2\-Wno-sign-compare/g" `grep "\-Wno-sign-compare" -rl  .`

######## openfst

Libraries have been installed in:
   /opt/emscripten/kaldi-wasm/kaldi/tools/openfst-1.6.7/lib

If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the `-LLIBDIR'
flag during linking and do at least one of the following:
   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
     during execution
   - add LIBDIR to the `LD_RUN_PATH' environment variable
     during linking
   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag
   - have your system administrator add LIBDIR to `/etc/ld.so.conf'

See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.



extras/check_dependencies.sh
extras/check_dependencies.sh: WARNING: unknown compiler /opt/emscripten/envemsdk/emsdk/upstream/emscripten/em++.
extras/check_dependencies.sh: Intel MKL is not installed. Run extras/install_mkl.sh to install it.
 ... You can also use other matrix algebra libraries. For information, see:
 ...   http://kaldi-asr.org/doc/matrixwrap.html
rm -f openfst
ln -s openfst-1.6.7 openfst
hao:----------- Building Openfst end-----------



##########

现状一遍kaldi
yum install zlib-devel gcc-gfortran

./extras/check_dependencies.sh
./extras/check_dependencies.sh: Intel MKL does not seem to be installed.
 ... Run extras/install_mkl.sh to install it. Some distros (e.g., Ubuntu 20.04) provide
 ... a version of MKL via the package manager, but verify that it is up-to-date.
 ... You can also use other matrix algebra libraries. For information, see:
 ...   http://kaldi-asr.org/doc/matrixwrap.html


./extras/install_mkl.sh
./extras/check_dependencies.sh

./extras/install_irstlm.sh

./configure
make depend
make

g++ -std=c++11 -I.. -isystem /opt/emscripten/setup/kaldi/tools/openfst-1.6.7/include -O1 -Wall -Wno-sign-compare -Wno-unused-local-typedefs -Wno-deprecated-declarations -Winit-self -DKALDI_DOUBLEPRECISION=0 -DHAVE_EXECINFO_H=1 -DHAVE_CXXABI_H -DHAVE_MKL -I/opt/intel/mkl/include -m64 -msse -msse2 -pthread -g    -c -o parse-options.o parse-options.cc


grep -nR "\-pthread" *

grep -rl "\-lpthread" .




sed -i  "s/\-pthread//g" `grep -rl "\-pthread" .` 

sed -i  "s/\-lpthread//g" `grep -rl "\-lpthread" .`




emmake make -j clean depend


emmake make  -C  depend

cd kaldi/src
emmake make -C base depend

/opt/emscripten/envemsdk/emsdk/upstream/emscripten/em++ -M -std=c++11 -I.. -isystem /opt/emscripten/kaldi-wasm/kaldi/tools/openfst-1.6.7/include -O1  -Wall -Wno-sign-compare -Wno-unused-local-typedefs -Wno-deprecated-declarations -Winit-self -DKALDI_DOUBLEPRECISION=0 -DHAVE_EXECINFO_H=1 -DHAVE_CXXABI_H -DHAVE_CLAPACK -I../../tools/CLAPACK -msse -msse2 -g -Wno-mismatched-tags -O2  -U HAVE_EXECINFO_H io-funcs.cc kaldi-math.cc kaldi-error-test.cc kaldi-utils.cc timer-test.cc kaldi-error.cc timer.cc io-funcs-test.cc kaldi-math-test.cc -msse -msse3  -mssse3 -msse4.1 -msse4.2 -mavx -mfpu=neon  -msimd128

vim install_kaldi.sh

#CXXFLAGS="-O3 -U HAVE_EXECINFO_H"
CXXFLAGS="-O2 -msse -msse3  -mssse3 -msse4.1 -msse4.2 -mavx -mfpu=neon  -msimd128 -U HAVE_EXECINFO_H"

------------ Creating WASM module ------------
cp: 无法获取"online2-tcp-nnet3-decode-faster-reorganized" 的文件状态(stat): 没有那个文件或目录

#PROGRAM=online2-tcp-nnet3-decode-faster-reorganized
PROGRAM=online2-tcp-nnet3-decode-faster-reorganized.cc

#em++ $EM_OPTS -o $WASM_NAME.js $PROGRAM.bc
#em++ $EM_OPTS -o $WASM_NAME.js $PROGRAM



###########  node 
npm install 
npm start

############   缺少 models

ASRPage.jsx:249 GET https://121.5.59.140:8080/models 500 (Internal Server Error

在
dummy_serv/server.js里面定义的：

/models 有问题是因为没这个目录

mkdir kaldi-wasm/dummy_serv/public


vim  webpack.config.js
 4 module.exports = {
  5   devServer: {
  6     host: '121.5.59.140',
  7     https: true,
  8     proxy: {
  9       '/models': {
 10         target: 'http://121.5.59.140:3000',
 11       },
 12     },
 13   },















































